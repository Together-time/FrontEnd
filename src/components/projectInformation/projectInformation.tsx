"use client";

import React, { useState } from "react";
import InvitePopup from '@/components/common/inviteMember';
import EditTagPopup from './tagEditPopup';
import { FaRegCommentDots } from "react-icons/fa";
import styles from "./projectInformation.module.css";
import { useAppSelector } from '@/app/store/store';


const ProjectInformation: React.FC = () => {
    const [isInviteMember, setIsInviteMember] = useState(false);
    const [isEditTags, setIsEditTags] = useState(false);
    const [showChat, setShowChat] = useState(false);

    //ÌîÑÎ°úÏ†ùÌä∏ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    const selectedProject = useAppSelector((state) => state.selectedProject.selectedProject);
    //ÌåÄÏõê Î™©Î°ù Í∞ÄÏ†∏Ïò§Í∏∞
    const members = useAppSelector((state) => state.team.members);
    const loading = useAppSelector((state) => state.team.loading);
    const error = useAppSelector((state) => state.team.error);

    // üîπ Ï†ëÏÜç Ï§ëÏù∏ ÏÇ¨Ïö©ÏûêÎ•º ÏÉÅÎã®Ïóê Ï†ïÎ†¨ÌïòÎäî ÏûÑÏãú Î°úÏßÅ Ï∂îÍ∞Ä
    const sortedUsers = [...members]
    .map((user) => ({
      ...user,
      isOnline: Math.random() > 0.5, // ‚úÖ 50% ÌôïÎ•†Î°ú Ïò®ÎùºÏù∏ ÏÉÅÌÉú ÏÑ§Ï†ï (ÏûÑÏãú)
    }))
    .sort((a, b) => {
      if (a.isOnline === b.isOnline) {
        return a.nickname.localeCompare(b.nickname); // Í∞ôÏùÄ ÏÉÅÌÉúÎ©¥ Ïù¥Î¶ÑÏàú Ï†ïÎ†¨
      }
      return b.isOnline ? 1 : -1; // `isOnline === true`Ïù¥Î©¥ ÏúÑÏ™ΩÏúºÎ°ú Î∞∞Ïπò
    });
  
  

    //ÌåÄÏõê Ï¥àÎåÄ
    const openInvitePopup = () => setIsInviteMember(true);
    const closeInvitePopup = () => setIsInviteMember(false);

    //ÌÉúÍ∑∏ Ìé∏Ïßë ÌåùÏóÖ
    const openEditTagPopup = () => setIsEditTags(true);
    const closeEditTagPopup = () => setIsEditTags(false);

    //ÏùΩÏßÄ ÏïäÏùÄ Î©îÏãúÏßÄ Ïàò
    const unreadMessages = 3;

    // Ï±ÑÌåÖÏ∞Ω Ïó¥Í∏∞
    const openChat = () => setShowChat(true);

    // Ï±ÑÌåÖÏ∞Ω Îã´Í∏∞
    const closeChat = () => setShowChat(false);

    return(
<div>
            {!showChat ? (
                // Í∏∞Î≥∏ ÏÑπÏÖò
                <div className={styles.informationContainer}>
                    <div className={styles.firstContainer}>
                        <h1>{selectedProject ? selectedProject.title : ""}</h1>
                    </div>
                    <div className={styles.secondContainer}>
                        <h3>ÌòÑÏû¨ Ï∞∏Ïó¨ Ï§ëÏù∏ Ïù∏Ïõê</h3>
                        <ul className={styles.userList}>
                        {sortedUsers.map((user) => (
                            <li key={user.id} className={styles.userItem}>
                            <span>{user.nickname}</span>
                            {user.isOnline && <span className={styles.onlineIndicator}></span>}
                            </li>
                        ))}
                        </ul>
                        <button onClick={openInvitePopup} className={styles.memberInviteBtn}>
                            + Ï¥àÎåÄ
                        </button>
                        {isInviteMember && (
                            <InvitePopup isOpen={isInviteMember} onClose={closeInvitePopup} />
                        )}
                    </div>
                    <div className={styles.thirdContainer}>
                        <h3>ÌÉúÍ∑∏</h3>
                        <ul className={styles.projecttags}>
                        {selectedProject?.tags && selectedProject.tags.length > 0 ? (
                        selectedProject.tags.map((tag, index) => (
                            <li key={index} className={styles.tag}>
                            {tag}
                            </li>
                        ))
                        ) : (
                        <p>ÌÉúÍ∑∏ ÏóÜÏùå</p>
                        )}
                    </ul>
                        <button className={styles.tagEditBtn} onClick={openEditTagPopup}>
                            + ÌÉúÍ∑∏ Ìé∏Ïßë
                        </button>
                        {isEditTags && (
                            <EditTagPopup isOpen={isEditTags} onClose={closeEditTagPopup} />
                        )}
                    </div>
                    <div className={styles.forthContainer}>
                        <div className={styles.iconWrapper}>
                            <FaRegCommentDots className={styles.commentIcon} onClick={openChat} />
                            <span className={styles.unreadBadge}>
                                {unreadMessages > 99 ? "99+" : unreadMessages}
                            </span>
                        </div>
                        <h2>ÏÇ¨Ïö©Ïûê Ïù¥Î¶Ñ</h2>
                    </div>
                </div>
            ) : (
                // Ï±ÑÌåÖÏ∞Ω
                <div className={styles.chatContainer}>
                    <div className={styles.titleContainer}>
                        <h1>ÎåÄÏ†Ñ Í∞ÄÏöî~</h1>
                    </div>
                    <div className={styles.closeContainer}>
                        <button onClick={closeChat} className={styles.closeChatBtn}>
                            X
                        </button>
                    </div>
                    <div>
                    
                    </div>
                    <h2>Ï±ÑÌåÖÏ∞Ω</h2>
                </div>
            )}
        </div>
    );
};

export default ProjectInformation;